#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\use_default_options true
\begin_modules
knitr
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\topmargin 3cm
\bottommargin 3cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\listings_params "language=bash"
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Homework1
\end_layout

\begin_layout Author
Tianyi Zhang
\end_layout

\begin_layout Subsection*
Problem1
\end_layout

\begin_layout Subsubsection*
a
\end_layout

\begin_layout Standard
First we need to download the zip file to local directory using wget, and
 name it to be data.zip.
 Next, uncompress the file and name the dataset to be data.csv.
\end_layout

\begin_layout Standard
Code:
\end_layout

\begin_layout Standard
wget --output-document data.zip "http://data.un.org/Handlers/DownloadHandler.ashx?Da
taFilter=itemCode:526&DataMartId=FAO&Format=csv&c=2,3,4,5,6,7&s=countryName:asc,
elementCode:asc,year:desc"
\end_layout

\begin_layout Standard
unzip data.zip
\end_layout

\begin_layout Standard
mv UNdata_Export_20150902_062742765.csv data.csv
\end_layout

\begin_layout Standard
Now using the command grep to split the data of regions and countries to
 two files, and also fix the comma problem in countries.
 I subsititute comma space to -.
 E.g.
 China, Mainland becomes China-Mainland, and this step helps me in future
 steps while making comma to be the delimiter.
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

    grep "+" data.csv > regions.csv
\end_layout

\begin_layout Plain Layout

	grep -v "+" data.csv > countries.csv
\end_layout

\begin_layout Plain Layout

	sed "s/, /-/g" countries.csv > countries_aprictos.csv   
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Now we are determining the five most land used countries in 2005, first
 use 
\begin_inset Quotes eld
\end_inset

grep
\begin_inset Quotes erd
\end_inset

 to find only the rows for Area Harvested in 2005, then we use sed to replace
 
\begin_inset Quotes eld
\end_inset

 
\begin_inset Quotes eld
\end_inset

 to nothing, which makes the numerical values evaluable in sort.
 Finally we sort the dataset and find the top 5 countires by the head command.
 
\end_layout

\begin_layout Standard
The top 5 countries are Turkey, Iran, Pakistan, Uzbekistan, and Algeria.
\end_layout

\begin_layout Standard
Code:
\end_layout

\begin_layout Standard
grep -i "Area" countries_aprictos.csv | grep "
\backslash
"2005
\backslash
"" | sed 's/"//g' | sort -t',' -k6 -n -r| head -5 | cut -d',' -k1,6 
\end_layout

\begin_layout Standard
Now we automate the analysis by writing a function called automate and set
 up a for loop, the i represents the year index.
 I also print the message to make the result looks nicer.
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

function automate(){ 
\end_layout

\begin_layout Plain Layout

for ((i=1965;i<=2005;i=i+10)) 
\end_layout

\begin_layout Plain Layout

do 
\end_layout

\begin_layout Plain Layout

	printf "This is the rank for year $i 
\backslash
n"
\end_layout

\begin_layout Plain Layout

	grep -i "Area" countries_aprictos.csv | grep "
\backslash
"$i
\backslash
"" | sed 's/"//g' | sort -t',' -k6 -n -r | head -5 | cut -d"," -f1,6
\end_layout

\begin_layout Plain Layout

	printf "
\backslash
n" 
\end_layout

\begin_layout Plain Layout

done 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\begin_layout Plain Layout

automate 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The height of the water level in Lake Huron flucuates over time.
 Here I analyze the variation using R.
 I show a histogram of the lake levels for the lake levels for the period
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Sexpr{attributes(LakeHuron)$tsp[1]}
\end_layout

\end_inset

 and 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Sexpr{attributes(LakeHuron)$tsp[2]}
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

<<plot_histograms,echo=TRUE,fig.width=3, fig.height=4>>=
\end_layout

\begin_layout Plain Layout

hist(LakeHuron)
\end_layout

\begin_layout Plain Layout

lowHi<-c(which.min(LakeHuron),which.max(LakeHuron)) 
\end_layout

\begin_layout Plain Layout

yearExtrema <-attributes(LakeHuron)$tsp[1]-1 + lowHi
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_body
\end_document
